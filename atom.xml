<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Root的博客</title>
  
  <subtitle>教练我想打篮球</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-11-03T15:49:11.732Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Root</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CSS简介</title>
    <link href="http://yoursite.com/2017/10/30/CSS%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2017/10/30/CSS简介/</id>
    <published>2017-10-30T12:30:35.000Z</published>
    <updated>2017-11-03T15:49:11.732Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><p>CSS全称Cascading Style Sheet层叠样式表，它的提出是为了解决一开始HTML各种显示功能的发展导致了HTML页面混乱臃肿。CSS的作用是定义HTML等文件的样式，使样式和页面结构分离开，便于之后再次更改样式。就如同html文件是一个涂色本，你可以任意规定某个部分的颜色，页面的表现不在和页面结构相关。CSS的内容主要分为选择器和样式属性。<br><a id="more"></a></p><h2 id="2-CSS引入"><a href="#2-CSS引入" class="headerlink" title="2.CSS引入"></a>2.CSS引入</h2><p>一般CSS有三种引入页面的方式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">1. 页面级css</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;style type=&quot;text/css&quot;&gt;</div><div class="line">&lt;!--style的type属性规定了文件的数据类型(MIME)，</div><div class="line">这儿type只有唯一值text/css，现在可以忽略type属性，</div><div class="line">style标签的默认type类型为text/css--&gt;</div><div class="line">        div &#123;</div><div class="line">            height: 100px;</div><div class="line">            width: 100px;</div><div class="line">            background-color: red;</div><div class="line">        &#125;</div><div class="line">        @import url(CSS文件地址)</div><div class="line">        &lt;!--import方式引入的CSS文件里的代码--&gt;</div><div class="line">    &lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line"></div><div class="line">2. 以行间样式引入CSS</div><div class="line">&lt;div style=&quot;height: 100px;width: 100px;background-color: red;&quot;&gt;</div><div class="line">&lt;/div&gt;</div><div class="line"></div><div class="line">3. 引入外部CSS文件（推荐方法）</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;page.css&quot;&gt;</div><div class="line">    &lt;!--rel是引入文件与页面之间的关系，</div><div class="line">    stylesheet作为当前页面的样式表，</div><div class="line">    href是外部资源的地址--&gt;</div><div class="line">&lt;/head&gt;</div></pre></td></tr></table></figure></p><h2 id="3-选择器"><a href="#3-选择器" class="headerlink" title="3.选择器"></a>3.选择器</h2><p>CSS提供了多样的选择器使CSS样式与html结构匹配，有这样一个结构：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">id</span>=<span class="string">"only"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"ul-list"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"first"</span>&gt;</span>one<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>two<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">li</span>&gt;</span>three<span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">em</span>&gt;</span>我在这儿<span class="tag">&lt;/<span class="name">em</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">strong</span>&gt;</span>我也在这儿<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一行文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></p><p>下面就演示下CSS中的选择器。</p><ol><li><p>标签选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">em &#123;</div><div class="line">    color: green;  //我在这儿变为绿色</div><div class="line">&#125;</div><div class="line">div &#123;</div><div class="line">    border: 1px solid black; //页面中所有div增加1px边框</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>class选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">.header &#123;</div><div class="line">    background-color: red; //类名为header的div背景色变为红色</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>id选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">#only &#123;</div><div class="line">    width: 500px;</div><div class="line">    height: 500px;  //id为only的标签有500*500宽高</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>通配符选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">* &#123;</div><div class="line">    margin: 0px;</div><div class="line">    padding: 0px;  //页面中所有标签去除内外边距</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>父子选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">.header ul li &#123;  //选中类名为header的div下的ul的子元素li</div><div class="line">    background-color: blue; </div><div class="line">&#125;</div><div class="line">//父子选择器查找顺序，从子元素向父元素查找</div><div class="line">//先找到li，再筛选出父元素为ul的li，逐级向上查找</div></pre></td></tr></table></figure></li><li><p>并列选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">li.first &#123; //选中有类名first的li</div><div class="line">    background-color: yellow;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>分组选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">.header span em,</div><div class="line">.header span strong &#123; //同时选中div.header下span下的em和strong</div><div class="line">    color: pink;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>伪类选择器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">为什么叫伪类呢？是因为这个选择器的效果和手动添加一个类名来选择，</div><div class="line">效果是一样的。</div><div class="line">a:hover &#123;</div><div class="line">    background-color: skyblue;</div><div class="line">&#125;</div><div class="line">//效果和在a标签上添加了一个class=&quot;hover&quot;的类是一样的</div></pre></td></tr></table></figure></li></ol><blockquote><p>CSS2.0大致就这七种选择器，CSS3.0又推出了属性选择器，伪元素选择器，条件选择器等</p></blockquote><p>一般来说页面中当然不会只有这么点样式，那么当多个样式同时作用到同一元素时，怎么判断元素最后呈现的样式呢<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;div style=&quot;width: 100px;height: 100px;&quot; class=&quot;demo&quot; id=&quot;test&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;!--css--&gt;</div><div class="line">div &#123;</div><div class="line">    height: 200px;</div><div class="line">    width: 200px;</div><div class="line">&#125;</div><div class="line">.demo &#123;</div><div class="line">    height: 300px;</div><div class="line">    width: 300px;</div><div class="line">&#125;</div><div class="line">#test &#123;</div><div class="line">    height: 400px;</div><div class="line">    width: 400px!important;</div><div class="line">&#125;</div><div class="line">//div最后宽400px高100px</div></pre></td></tr></table></figure></p><p>之所以会这样，是因为引入了一个CSS权重的概念，权重值如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">!important  --  infinity</div><div class="line">行间样式  --  1000</div><div class="line">id选择器  --  100</div><div class="line">属性/class/伪类选择器  --  10</div><div class="line">标签/伪元素  --  1</div><div class="line">通配符  --  0</div><div class="line">//需要判断最终样式时，按照权重值大小判断，越大优先级越高</div><div class="line">//当权重值相同时，在样式表中后出现的样式会覆盖先出现的</div></pre></td></tr></table></figure></p><h2 id="4-CSS的一些属性"><a href="#4-CSS的一些属性" class="headerlink" title="4.CSS的一些属性"></a>4.CSS的一些属性</h2><p>CSS的属性按照功能可以分为字体文本、边框、背景、盒模型、颜色、定位布局、边距等方面的属性，只简单介绍几种，详细的可以参考手册或是上W3C index查找。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">font-famliy -- 字体，可以填写多个字体用于兼容</div><div class="line">font-size -- 字体大小，默认字体大小16px,网页一般12px</div><div class="line">color -- 字体颜色，有三种表示方法，颜色英文单词，十六进制表示，rgb(a)函数表示</div><div class="line">text-align -- 文本水平对齐方式</div><div class="line">text-indent -- 首行文字缩进</div><div class="line">text-decoration -- 文本装饰样式</div><div class="line">verticla-align -- 垂直对齐方式（基准线）</div><div class="line">letter-spacing -- 文字间隙</div><div class="line">word-spacing -- 单词间隙</div><div class="line">border -- 边框，这是一个复合属性，由三种属性复合</div><div class="line">border-width -- 边框宽度</div><div class="line">border-style -- 边框样式(solid,dotted,dashed)</div><div class="line">border-color -- 边框颜色</div><div class="line">border-left/right/top/bottom -- 单独设置某一边框</div><div class="line">background -- 背景，复合属性</div><div class="line">background-repeat -- 背景图片没全部填充时是否重复</div><div class="line">background-size -- 背景尺寸支持数字、百分比、cover、contain</div><div class="line">background-attachment -- 定义背景图随滚动条滚动方式</div><div class="line">background-clip -- 背景图片开始绘制区域</div><div class="line">display -- 元素展示形式</div><div class="line">list-style-type -- 列表元素样式</div><div class="line">list-style-position -- 列表标号位置，是在内容器区还是ul内边距区</div><div class="line">position -- 定位</div><div class="line">visibility -- 可见性</div><div class="line">overflow -- 溢出是否隐藏</div></pre></td></tr></table></figure></p><blockquote><p>这里仅仅笼统提一下CSS2、3中的属性，CSS布局是前端领域的重难点，建议看看张鑫旭大神的各种奇技淫巧。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-简介&quot;&gt;&lt;a href=&quot;#1-简介&quot; class=&quot;headerlink&quot; title=&quot;1.简介&quot;&gt;&lt;/a&gt;1.简介&lt;/h2&gt;&lt;p&gt;CSS全称Cascading Style Sheet层叠样式表，它的提出是为了解决一开始HTML各种显示功能的发展导致了HTML页面混乱臃肿。CSS的作用是定义HTML等文件的样式，使样式和页面结构分离开，便于之后再次更改样式。就如同html文件是一个涂色本，你可以任意规定某个部分的颜色，页面的表现不在和页面结构相关。CSS的内容主要分为选择器和样式属性。&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>HTML标签简介</title>
    <link href="http://yoursite.com/2017/10/30/HTML%E6%A0%87%E7%AD%BE%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2017/10/30/HTML标签简介/</id>
    <published>2017-10-30T12:30:19.000Z</published>
    <updated>2017-10-30T13:34:13.703Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTML标签"><a href="#HTML标签" class="headerlink" title="HTML标签"></a>HTML标签</h1><h2 id="1-文档声明"><a href="#1-文档声明" class="headerlink" title="1. 文档声明"></a>1. 文档声明</h2><p><code>&lt;! DOCUTYPE &gt;</code> （不是一个标签）文档声明头DTD（docutype declaration）有如下几种形式</p><p><em>用于XHTML1.0严格模式的</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE htmlPUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"</span></div><div class="line"><span class="meta">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;</span></div></pre></td></tr></table></figure></p><p><em>用于XHTML1.0过渡模式</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE htmlPUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"</span></div><div class="line"><span class="meta">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;</span></div></pre></td></tr></table></figure></p><p><em>但是现在通用HTML5的文档声明模式</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">!DOCUTYPE</span> <span class="attr">html</span>&gt;</span></div></pre></td></tr></table></figure></p><p>前几种因为标记语言基于SGML，故需要引入文档类型声明DTD，HTML5没有基于SGML，所以文档声明大大简化了<br><a id="more"></a></p><h2 id="2-根标签"><a href="#2-根标签" class="headerlink" title="2.根标签"></a>2.根标签<html></html></h2><p>页面中的其他标签需要放在根标签里</p><h2 id="3-头标签"><a href="#3-头标签" class="headerlink" title="3.头标签"></a>3.头标签<head></head></h2><p><code>&lt;head&gt;&lt;/head&gt;</code>标签，其中可以包含描述页面信息的标签，可用于SEO优化，可包含如下标签</p><p><code>&lt;title&gt;&lt;/title&gt;</code>页面标题</p><p><code>&lt;meta /&gt;</code>提供页面的基本信息，元配置<br>可以设置页面的配置信息，例如<code>charset</code>可以设置页面支持的字符集，避免出现不支持的字符时乱码，charset的字符集必须和文档保存的文件编码类型一致，具体引入<code>utf-8</code>还是<code>gbk2312</code>，考虑加载速度和字符集数量。meta标签也可用于设置页面的关键字内容。</p><p><code>&lt;meta name=&quot;Description&quot; content=&quot;描述内容&quot; /&gt;</code>告诉搜索引擎页面的描述</p><p><code>&lt;meta name=&quot;Keyword&quot; content=&quot;关键字&quot; /&gt;</code>告知页面的关键字</p><p><code>&lt;link /&gt;</code>引入外部资源如css</p><p><code>&lt;script&gt;&lt;/script&gt;</code>包含或者引入js脚本</p><h2 id="4-body标签"><a href="#4-body标签" class="headerlink" title="4.body标签"></a>4.body标签</h2><p><code>&lt;body&gt;&lt;/body&gt;</code>存放页面主要内容，可以配置一些属性，如<code>bgcolor</code>背景色，<code>background</code>背景图片，<code>text</code>文本颜色，<code>topmargin</code>上边距，<code>link</code>超链接默认颜色，<code>alink</code>链接被点击时的颜色，<code>vlink</code>点击完成后的颜色，不过避免这样使用，与web规范违背。</p><h2 id="5-其他语义化标签"><a href="#5-其他语义化标签" class="headerlink" title="5.其他语义化标签"></a>5.其他语义化标签</h2><p>作为一门标记语言，HTML中的标签语义化都十分好，例如<code>&lt;p&gt;&lt;/p&gt;</code>即为paragraph</p><p>按标签元素类型有如下分类：</p><ol><li><p>块级元素：属性为<code>display: block</code>的标签，可以设置宽高，独占一行，不能继承自行级元素，即不能嵌套在行级元素中。块级元素一般来说可以包含任意元素，但是像<code>&lt;p&gt;&lt;/p&gt;</code>标签这样文本级标签，只能包含文字、图片、表单元素等具有文属性的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">常见的几个块级元素：</div><div class="line">address -- 地址</div><div class="line">blockquote -- 块引用</div><div class="line">div -- 最常用的块级容器</div><div class="line">form -- 表单</div><div class="line">table -- 表格（里面嵌套&lt;tr&gt;和&lt;td&gt;标签）</div><div class="line">h1~6 -- 1~6级标题</div><div class="line">hr -- 水平线</div><div class="line">ol -- 有序列表</div><div class="line">ul -- 无序列表</div><div class="line">p -- 段落标签</div></pre></td></tr></table></figure></li><li><p>行级元素（内联元素）：属性为<code>display: inline</code>的标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">常见的行级元素：</div><div class="line">a -- 锚点</div><div class="line">em -- 强调</div><div class="line">u -- 下划线</div><div class="line">cite -- 引用</div><div class="line">br -- 换行</div><div class="line">i -- 斜体</div><div class="line">img -- 图片</div><div class="line">label -- 表格标签</div><div class="line">span -- 最常用内联容器与div标签类似</div><div class="line">input -- 单行文本输入框</div><div class="line">textarea -- 多行文本输入框</div></pre></td></tr></table></figure></li></ol><blockquote><p>随着web规范的完善，行为样式结构分离的提出，很多标签已经不推荐使用，这些不用得标签可用于自定义标签</p></blockquote><ol><li>行级块元素：属性为<code>display: inline-block</code>的标签，兼具行级元素与块级元素的特性，不属于默认<code>display</code>属性的一种，使元素本身解析为<code>inline</code>，内部解析成<code>block</code><blockquote><p>tips: 凡是带有inline属性的元素均带有文字属性，元素之间会有4px的间距。</p></blockquote></li></ol><p>按照元素渲染出的盒模型可以分为如下：</p><ol><li>容器级元素： 可以嵌套任意元素</li><li>文本级元素：只能嵌套文本、图片、表单元素。如果在文本级元素中嵌套了块级，则会自动先将文本级元素标签闭合一次，例如：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;p&gt;</div><div class="line">    &lt;div&gt;嘿嘿&lt;/div&gt;</div><div class="line">&lt;/p&gt;</div><div class="line">&lt;!--  在页面中会渲染成如下形式 --&gt;</div><div class="line">&lt;p&gt;&lt;/p&gt;</div><div class="line">&lt;div&gt;嘿嘿&lt;/div&gt;</div><div class="line">&lt;p&gt;&lt;/p&gt;</div></pre></td></tr></table></figure></li></ol><h4 id="lt-span-gt-amp-lt-div-gt"><a href="#lt-span-gt-amp-lt-div-gt" class="headerlink" title="&lt;span&gt;&amp;&lt;div&gt;"></a><code>&lt;span&gt;</code>&amp;<code>&lt;div&gt;</code></h4><p>这是HTML中重要的两个容器标签，作用相当于抽屉或是收纳盒，可以划分页面具有不同功能的区域，便于存放和操作其他标签，区别是<code>&lt;div&gt;</code>是块级元素，独占一行，<code>&lt;span&gt;</code>行级元素，内容决定其宽高，多用来容纳文字。</p><h4 id="这里需要提一下-lt-a-gt-标签，锚点标签"><a href="#这里需要提一下-lt-a-gt-标签，锚点标签" class="headerlink" title="这里需要提一下&lt;a&gt;标签，锚点标签"></a>这里需要提一下<code>&lt;a&gt;</code>标签，锚点标签</h4><p>这也是HTML中重要的一个标签，<br><code>&lt;a href=&quot;&quot;&gt;&lt;/a&gt;</code>属性<code>href</code>意为hypertext reference，超文本引用，可以实现如下功能：</p><ol><li>链接：<code>&lt;a href=&quot;http://www.baidu.com&quot;&gt;</code>点击既能跳转到百度。</li><li><p>锚点：<code>href</code>这个用法需要配合<code>name</code>或者<code>id</code>属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div id=&quot;up&quot;&gt;&lt;/div&gt;</div><div class="line">&lt;a href=&quot;#up&quot;&gt;</div><div class="line">&lt;!-- 点击a可以定位到div --&gt;</div></pre></td></tr></table></figure></li><li><p>协议限定符：<code>href</code>属性还可填写一段javascript代码，点击就执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;javascript: alert(&apos;点击了a&apos;)&quot;&gt;</div><div class="line">&lt;!-- 点击会弹出警示框 --&gt;</div></pre></td></tr></table></figure></li><li><p>除此之外，<code>href</code>还可实现电话，邮件的功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;mailto:邮箱地址&quot;&gt;</div><div class="line">&lt;a href=&quot;tel:电话号&quot;&gt;</div></pre></td></tr></table></figure></li><li><p><code>target</code>属性：规定了打开目标页面的方式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">_self -- 在当前窗口打开</div><div class="line">_blank -- 在新窗口打开</div></pre></td></tr></table></figure></li></ol><blockquote><p>但是这些功能均可用js实现，故不推荐直接使用</p></blockquote><h4 id="图片标签-lt-img-gt"><a href="#图片标签-lt-img-gt" class="headerlink" title="图片标签&lt;img /&gt;"></a>图片标签<code>&lt;img /&gt;</code></h4><p>这是一个单标签，主要属性<code>src</code>，用于引入图片位置，可填写<em>相对路径</em>，<em>绝对路径</em>，<em>服务器路径</em>，<code>alt</code>属性，图片占位符，用于图片无法显示时提示图片信息，可被搜索引擎爬虫识别</p><p><em>相对路径</em>：和页面相同文件夹目录下的路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;img src=&quot;one.jpg&quot; /&gt; -- 当前目录下</div><div class="line">&lt;img src=&quot;./one.jpg&quot; /&gt; -- 当前目录下</div><div class="line">&lt;img src=&quot;images/one.jpg&quot; /&gt; -- 当前目录下images文件夹下</div><div class="line">&lt;img src=&quot;../images/one.jpg&quot; -- 上一级目录的images文件夹下</div></pre></td></tr></table></figure></p><p><em>绝对路径</em>：图片完整的引用路径<br><code>&lt;img src=&quot;C:/desktop/one.jpg&quot; /&gt;</code></p><p><em>服务器路径</em>：<code>&lt;img src=&quot;/images/one.jpg&quot; /&gt;</code>以imgages为根目录向下寻找</p><h4 id="有序列表，无序列表"><a href="#有序列表，无序列表" class="headerlink" title="有序列表，无序列表"></a>有序列表，无序列表</h4><p>有序列表<code>&lt;ol&gt;&lt;/ol&gt;</code>，无序列表<code>&lt;ul&gt;&lt;/ul&gt;</code>多用来做具有归属关系的功能块、子项，两者区别是子项有无顺序，子项<code>&lt;li&gt;&lt;/li&gt;</code>，可以在<code>&lt;ul&gt;&lt;/ul&gt;</code>上添加<code>type</code>属性实现子项的样式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">默认样式 disc -- 小圆点</div><div class="line">square -- 实心正方形</div><div class="line">circle -- 空心圆圈</div></pre></td></tr></table></figure></p><p>对于有序列表<code>&lt;ol&gt;&lt;/ol&gt;</code>可通过设置<code>type</code>属性来规定排序方式，<code>reversed</code>反向排序，<code>start</code>开始位置</p><h4 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单<form></form></h4><p>表单常用于与后台进行数据传送<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">一个简单的账号密码：</div><div class="line">&lt;!-- method表示数据传送的方法，有get和post两种，action是数据发送的地址 --&gt;</div><div class="line">&lt;form method=&quot;get&quot; action=&quot;#&quot;&gt;</div><div class="line">&lt;!--input标签的type属性表示文本类型，text明文，password暗文，name表示数据名，value对应数据值--&gt;</div><div class="line">    username: &lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;填写用户名&quot;&gt;</div><div class="line">    password: &lt;input type=&quot;password&quot; name=&quot;password&quot;&gt;</div><div class="line">    &lt;input type=&quot;submit&quot; value=&quot;确定&quot;&gt;</div><div class="line">&lt;!--input的type值为submit时代表这是一个提交按钮，</div><div class="line">可配置value属性显示按钮的文字，默认提交，</div><div class="line">点击按钮会触发表单的submit事件--&gt;</div><div class="line">&lt;!--input的type值还有上传文件的file，</div><div class="line">需要搭配form上的属性enctype=&quot;multipart/form-data&quot;</div><div class="line">默认情况下，type=&quot;application/x-www-form-urlencoded&quot;</div><div class="line">&lt;/form&gt;</div><div class="line"></div><div class="line">&lt;!--input也可做选择框--&gt;</div><div class="line">&lt;form method=&quot;get&quot; action=&quot;#&quot;&gt;</div><div class="line">    male:&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;male&quot; checked&gt;</div><div class="line">    female:&lt;input type=&quot;radio&quot; name=&quot;sex&quot; value=&quot;female&quot;&gt;</div><div class="line">&lt;!--radio表示单选框，checkbox多选框，设置相同的name表示一组选项，checked默认选中--&gt;</div><div class="line">&lt;/form&gt;</div><div class="line"></div><div class="line">&lt;!--下拉选择框--&gt;</div><div class="line">&lt;form method=&quot;get&quot; action=&quot;#&quot;&gt;</div><div class="line">    &lt;select value=&quot;北京&quot;&gt;北京&lt;/select&gt;</div><div class="line">    &lt;select value=&quot;上海&quot;&gt;上海&lt;/select&gt;</div><div class="line">&lt;!--value才是真实的数据值，默认选中第一个select的内容--&gt;</div><div class="line">&lt;/form&gt;</div></pre></td></tr></table></figure></p><h2 id="6-特殊字符"><a href="#6-特殊字符" class="headerlink" title="6.特殊字符"></a>6.特殊字符</h2><p>在HTML中输入多个空格会被折叠为一个空格：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;div&gt;嘻      哈哈哈哈&lt;/div&gt;</div><div class="line">&lt;!--  渲染到文档中时,多个空格会合并为一个 --&gt;</div><div class="line">嘻 哈哈哈哈!</div></pre></td></tr></table></figure></p><p>并且，当你想在页面中直接输出一个标签<code>&lt;div&gt;</code>是不行的，浏览器会将它当作HTML渲染，正确的做法是将<code>&lt;</code>用特殊格式表示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">举栗子</div><div class="line">&amp;nbsp; -- 空格</div><div class="line">&amp;gt; -- &gt;号</div><div class="line">&amp;lt; -- &lt;号</div><div class="line">&amp;amp; -- &amp;</div><div class="line">&amp;quot; -- &quot;号</div><div class="line">&amp;apos; -- &apos;号</div><div class="line">&amp;copy; -- 版权符号 ©</div><div class="line">&amp;trade; -- 商标 ™</div><div class="line">&amp;#[五位字符unicode码]; -- 可用这种形式输出特定字符</div></pre></td></tr></table></figure></p><hr><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>HTML的常用标签部分大致就这么些，当然HTML中的标签多种多样，尤其2014年HTML5的推出引入了多种类似<code>&lt;div&gt;</code>但是语义化更加明确的标签，如<code>&lt;header&gt;</code>定义文档头部，<code>&lt;footer&gt;</code>表示文档等页脚，<code>&lt;article&gt;</code>一段文章，<code>&lt;aside&gt;</code>侧边栏，<code>&lt;section&gt;</code>文档的一小节，等等，使页面具有更好的语义和结构。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;HTML标签&quot;&gt;&lt;a href=&quot;#HTML标签&quot; class=&quot;headerlink&quot; title=&quot;HTML标签&quot;&gt;&lt;/a&gt;HTML标签&lt;/h1&gt;&lt;h2 id=&quot;1-文档声明&quot;&gt;&lt;a href=&quot;#1-文档声明&quot; class=&quot;headerlink&quot; title=&quot;1. 文档声明&quot;&gt;&lt;/a&gt;1. 文档声明&lt;/h2&gt;&lt;p&gt;&lt;code&gt;&amp;lt;! DOCUTYPE &amp;gt;&lt;/code&gt; （不是一个标签）文档声明头DTD（docutype declaration）有如下几种形式&lt;/p&gt;
&lt;p&gt;&lt;em&gt;用于XHTML1.0严格模式的&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE htmlPUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;用于XHTML1.0过渡模式&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;lt;!DOCTYPE htmlPUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;但是现在通用HTML5的文档声明模式&lt;/em&gt;&lt;br&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;!DOCUTYPE&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;前几种因为标记语言基于SGML，故需要引入文档类型声明DTD，HTML5没有基于SGML，所以文档声明大大简化了&lt;br&gt;
    
    </summary>
    
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
  <entry>
    <title>关于前端</title>
    <link href="http://yoursite.com/2017/10/30/%E5%85%B3%E4%BA%8E%E5%89%8D%E7%AB%AF/"/>
    <id>http://yoursite.com/2017/10/30/关于前端/</id>
    <published>2017-10-30T12:27:09.000Z</published>
    <updated>2017-10-30T14:07:05.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-名词解释"><a href="#1-名词解释" class="headerlink" title="1.名词解释"></a>1.名词解释</h2><p><strong>w3c</strong>: 万维网联盟组织，定制web标准的机构</p><p><strong>SGML</strong>: Stantard Generalized Markup Language标准通用标记语言，定义电子文档结构及描述其内容的语言，是所有电子文档标记语言的起源。</p><p><strong>HTML</strong>: Hypertext Markup language超文本标记语言，采用超链接的方法将不同文档信息组织在一起，显示信息，描述文档语义的语言，语法松散不严格</p><p><strong>XML</strong>：Extensible Markup Language可拓展标记语言，用来叙述数据和结构，没有固定标签集，没有语法规则，仅有句法规则（例如标签需要成对）</p><p><strong>XHTML</strong>：Extensible Hypertext Markup Language，可拓展超文本标记语言。<br>因为html书写不规范，在一些设备上容易造成显示问题，出现了严格纯净的html版本，格式与html4.0相似。是HTML和XML的结合<br><a id="more"></a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">xhtml规范：</div><div class="line">1.所有标记需要正确嵌套</div><div class="line">2.所有标签都需要小写</div><div class="line">3.所有标签要正确闭合，单标签写法&lt;br /&gt;，&lt;img src=&quot;/1.jpg&quot; /&gt;</div><div class="line">4.属性值加引号</div><div class="line">5.属性值需有值</div><div class="line">6.在文档开头须有DTD文档类型定义</div></pre></td></tr></table></figure></p><p><strong><em>SEO</em></strong>：Search Engine Optimization，搜索引擎优化，对网站进行调整优化，改变关键字排名。</p><p><strong><em>DTD</em></strong>: Docutype Declaration文档类型定义，是一套关于标记符的语法规则，使文档符合规定的数据交换标准</p><p><strong><em>DHTML</em></strong>：即Dynasmic html动态html，是html,css,js的集合不属于w3c规范</p><p><strong><em>HTTP协议</em></strong>：超文本传输协议，用以规定客户端和服务器传输数据的格式，相似的有SMTP:邮件传输协议，FTP文件传输协议</p><h2 id="2-计算机编码"><a href="#2-计算机编码" class="headerlink" title="2.计算机编码"></a>2.计算机编码</h2><p><strong><em>ASCII</em></strong>：用1字节（8位二进制数）表示一个字符，共有2^8=256个</p><p><strong><em>ANSI</em></strong>：每个国家为了显示本国语言对ASCII码进行扩展，中国GBK2312，日本JIS，台湾BIG5</p><p><strong><em>GBK</em></strong>：对GBK2312的扩展，能够显示少见的以及古汉字</p><p><strong><em>Unicode</em></strong>：用4个字节表示一个字符，但是对ASCII码中存在的字符来说效率低下</p><p><strong><em>GTF-8</em></strong>：(Unicode Transform Format)根据字符不同，采用不同字编码长度，字母1字节，汉字2字节，目前最通用的字符编码格式</p><h3 id="3-HTML颜色值："><a href="#3-HTML颜色值：" class="headerlink" title="3.HTML颜色值："></a>3.HTML颜色值：</h3><p><strong><em>颜色标识符</em></strong>：如blue,red,green</p><p><strong><em>rgb</em></strong>:格式rgb([red], [green], [blue])每一位可用0~255的十进制数表示，也有用rgba格式的，a（alpha）表示透明度，取值范围(0,1)</p><p><strong><em>十六进制表示</em></strong>：<code>#ff4400</code>，每种色值用两位十六进制数表示，当色值两位数一样时可以简写为<code>#f40</code></p><h2 id="3-浏览器组成"><a href="#3-浏览器组成" class="headerlink" title="3.浏览器组成"></a>3.浏览器组成</h2><p>浏览器一般由以下几部分构成：</p><ol><li>用户界面：除了主窗口以外的其他浏览器可见部分</li><li>内核：内核又由如下几个部分组成<ol><li>浏览器引擎：查询操作渲染引擎</li><li>渲染引擎：构建页面的主要引擎，用于解析显示请求回来的文档资源（html和css）</li><li>js解释器：解释执行js</li></ol></li><li>网络：执行网络请求的模块</li><li>数据存储：浏览器用于在客户端硬盘存储诸如cookie等信息的模块<h2 id="4-主流浏览器内核"><a href="#4-主流浏览器内核" class="headerlink" title="4.主流浏览器内核"></a>4.主流浏览器内核</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">IE(Internet Explorer):  trident</div><div class="line">Google Chrome:  webkit/blink</div><div class="line">Safari:  webkit(webkit是谷歌和苹果联合开发)</div><div class="line">Firefox:  Gecko</div><div class="line">Opera:  presto</div></pre></td></tr></table></figure></li></ol><p><img src="/images/ASCII.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-名词解释&quot;&gt;&lt;a href=&quot;#1-名词解释&quot; class=&quot;headerlink&quot; title=&quot;1.名词解释&quot;&gt;&lt;/a&gt;1.名词解释&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;w3c&lt;/strong&gt;: 万维网联盟组织，定制web标准的机构&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SGML&lt;/strong&gt;: Stantard Generalized Markup Language标准通用标记语言，定义电子文档结构及描述其内容的语言，是所有电子文档标记语言的起源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;HTML&lt;/strong&gt;: Hypertext Markup language超文本标记语言，采用超链接的方法将不同文档信息组织在一起，显示信息，描述文档语义的语言，语法松散不严格&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XML&lt;/strong&gt;：Extensible Markup Language可拓展标记语言，用来叙述数据和结构，没有固定标签集，没有语法规则，仅有句法规则（例如标签需要成对）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;XHTML&lt;/strong&gt;：Extensible Hypertext Markup Language，可拓展超文本标记语言。&lt;br&gt;因为html书写不规范，在一些设备上容易造成显示问题，出现了严格纯净的html版本，格式与html4.0相似。是HTML和XML的结合&lt;br&gt;
    
    </summary>
    
    
      <category term="css" scheme="http://yoursite.com/tags/css/"/>
    
      <category term="html" scheme="http://yoursite.com/tags/html/"/>
    
  </entry>
  
</feed>
